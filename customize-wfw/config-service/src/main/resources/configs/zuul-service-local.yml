# zuul作为路由器的坑, 其他的微服务必须要将端口配置在yml或者properties文件中，不能以java config的形式进行配置，
# 否则zuul在找到服务名时，请求的是8080的端口，猜测是从eureka中获取的服务信息中没有包含java config的信息
server:
  port: 9000

spring:
  profiles:
    include:
      - eureka_client

eureka:
  instance:
    instance-id: zuul-service
    # 配置显示ip地址
    prefer-ip-address: true
    #设置客户端发送心跳给eureka服务器的时间间隔，默认30s
    lease-renewal-interval-in-seconds: 1
    # 若客户端在3s内没有发送心跳给eureka，那么就表示此客户端宕机了, 在eureka进行清理服务时就能把这个服务给剔除了
    # 所以若将此实例关闭，那么在eureka页面中最迟在
    # eureka.server.eviction-interval-timer-in-ms属性的值 + eureka.client.lease-expiration-duration-in-seconds的值
    # 后能看到实例被剔除
    lease-expiration-duration-in-seconds: 3

# debug: true

zuul:
  routes:
    users:
      path: /v*/users/**
      serviceId: user-service
      # 一定要加这个配置, 默认为true，若不加，则会在SimpleRouteLocator类的getRoute方法获取route时将前面的/去掉
      # (getRoute方法会将第一个*前面的所有东西变成/)
      # 最终的route对象的pathUrl会变成  v1/users/**
      # 若配置的是 /users/**, 经过getRoute方法后路由的pathUrl的值会变成/**
      #
      # 将路由获取之后，在跟请求中的uri进行关系映射(如上述的v1/users/** 或者 /**)
      # 参考博客链接: https://www.jianshu.com/p/8e78c0716365
      strip-prefix: false
    order:
      path: /v*/orders/**
      serviceId: order-service
      strip-prefix: false
    goods:
      path: /v*/goods/**
      serviceId: goods-service
      strip-prefix: false
  ignored-services: '*' # 忽略所有服务名的路由
